// Code generated by "weaver generate". DO NOT EDIT.
//go:build !ignoreWeaverGen

package main

import (
	"fmt"
	"github.com/ServiceWeaver/weaver"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)

// weaver.InstanceOf checks.

// weaver.Router checks.

// Local stub implementations.

// Client stub implementations.

// Note that "weaver generate" will always generate the error message below.
// Everything is okay. The error message is only relevant if you see it when
// you run "go build" or "go run".
var _ codegen.LatestVersion = codegen.Version[[0][20]struct{}](`

ERROR: You generated this file with 'weaver generate' v0.22.0 (codegen
version v0.20.0). The generated code is incompatible with the version of the
github.com/ServiceWeaver/weaver module that you're using. The weaver module
version can be found in your go.mod file or by running the following command.

    go list -m github.com/ServiceWeaver/weaver

We recommend updating the weaver module and the 'weaver generate' command by
running the following.

    go get github.com/ServiceWeaver/weaver@latest
    go install github.com/ServiceWeaver/weaver/cmd/weaver@latest

Then, re-run 'weaver generate' and re-build your code. If the problem persists,
please file an issue at https://github.com/ServiceWeaver/weaver/issues.

`)

// Server stub implementations.

// Reflect stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = (*Creator)(nil)

type __is_Creator[T ~struct {
	weaver.AutoMarshal
	UserId   int64
	Username string
}] struct{}

var _ __is_Creator[Creator]

func (x *Creator) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Creator.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.UserId)
	enc.String(x.Username)
}

func (x *Creator) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Creator.WeaverUnmarshal: nil receiver"))
	}
	x.UserId = dec.Int64()
	x.Username = dec.String()
}

var _ codegen.AutoMarshal = (*Media)(nil)

type __is_Media[T ~struct {
	weaver.AutoMarshal
	MediaId   int64
	MediaType string
}] struct{}

var _ __is_Media[Media]

func (x *Media) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Media.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.MediaId)
	enc.String(x.MediaType)
}

func (x *Media) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Media.WeaverUnmarshal: nil receiver"))
	}
	x.MediaId = dec.Int64()
	x.MediaType = dec.String()
}

var _ codegen.AutoMarshal = (*Post)(nil)

type __is_Post[T ~struct {
	weaver.AutoMarshal
	Post_id       int64
	Creator       Creator
	Req_id        int64
	Text          string
	User_mentions []UserMention
	Media         []Media
	Urls          []Url
	Timestamp     int64
	Post_type     PostType
}] struct{}

var _ __is_Post[Post]

func (x *Post) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Post.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.Post_id)
	(x.Creator).WeaverMarshal(enc)
	enc.Int64(x.Req_id)
	enc.String(x.Text)
	serviceweaver_enc_slice_UserMention_25e360a6(enc, x.User_mentions)
	serviceweaver_enc_slice_Media_77f90baf(enc, x.Media)
	serviceweaver_enc_slice_Url_8c86ee3b(enc, x.Urls)
	enc.Int64(x.Timestamp)
	enc.Int((int)(x.Post_type))
}

func (x *Post) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Post.WeaverUnmarshal: nil receiver"))
	}
	x.Post_id = dec.Int64()
	(&x.Creator).WeaverUnmarshal(dec)
	x.Req_id = dec.Int64()
	x.Text = dec.String()
	x.User_mentions = serviceweaver_dec_slice_UserMention_25e360a6(dec)
	x.Media = serviceweaver_dec_slice_Media_77f90baf(dec)
	x.Urls = serviceweaver_dec_slice_Url_8c86ee3b(dec)
	x.Timestamp = dec.Int64()
	*(*int)(&x.Post_type) = dec.Int()
}

func serviceweaver_enc_slice_UserMention_25e360a6(enc *codegen.Encoder, arg []UserMention) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_UserMention_25e360a6(dec *codegen.Decoder) []UserMention {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]UserMention, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

func serviceweaver_enc_slice_Media_77f90baf(enc *codegen.Encoder, arg []Media) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_Media_77f90baf(dec *codegen.Decoder) []Media {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]Media, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

func serviceweaver_enc_slice_Url_8c86ee3b(enc *codegen.Encoder, arg []Url) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_Url_8c86ee3b(dec *codegen.Decoder) []Url {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]Url, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

var _ codegen.AutoMarshal = (*TextServiceReturn)(nil)

type __is_TextServiceReturn[T ~struct {
	weaver.AutoMarshal
	Text          string
	User_mentions []UserMention
	Urls          []Url
}] struct{}

var _ __is_TextServiceReturn[TextServiceReturn]

func (x *TextServiceReturn) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("TextServiceReturn.WeaverMarshal: nil receiver"))
	}
	enc.String(x.Text)
	serviceweaver_enc_slice_UserMention_25e360a6(enc, x.User_mentions)
	serviceweaver_enc_slice_Url_8c86ee3b(enc, x.Urls)
}

func (x *TextServiceReturn) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("TextServiceReturn.WeaverUnmarshal: nil receiver"))
	}
	x.Text = dec.String()
	x.User_mentions = serviceweaver_dec_slice_UserMention_25e360a6(dec)
	x.Urls = serviceweaver_dec_slice_Url_8c86ee3b(dec)
}

var _ codegen.AutoMarshal = (*Url)(nil)

type __is_Url[T ~struct {
	weaver.AutoMarshal
	ShortenedUrl string
	ExpandedUrl  string
}] struct{}

var _ __is_Url[Url]

func (x *Url) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Url.WeaverMarshal: nil receiver"))
	}
	enc.String(x.ShortenedUrl)
	enc.String(x.ExpandedUrl)
}

func (x *Url) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Url.WeaverUnmarshal: nil receiver"))
	}
	x.ShortenedUrl = dec.String()
	x.ExpandedUrl = dec.String()
}

var _ codegen.AutoMarshal = (*UserMention)(nil)

type __is_UserMention[T ~struct {
	weaver.AutoMarshal
	UserId   int64
	Username string
}] struct{}

var _ __is_UserMention[UserMention]

func (x *UserMention) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("UserMention.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.UserId)
	enc.String(x.Username)
}

func (x *UserMention) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("UserMention.WeaverUnmarshal: nil receiver"))
	}
	x.UserId = dec.Int64()
	x.Username = dec.String()
}

var _ codegen.AutoMarshal = (*UserProfile)(nil)

type __is_UserProfile[T ~struct {
	weaver.AutoMarshal
	UserId         int64
	FirstName      string
	LastName       string
	Salt           string
	PasswordHashed string
}] struct{}

var _ __is_UserProfile[UserProfile]

func (x *UserProfile) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("UserProfile.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.UserId)
	enc.String(x.FirstName)
	enc.String(x.LastName)
	enc.String(x.Salt)
	enc.String(x.PasswordHashed)
}

func (x *UserProfile) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("UserProfile.WeaverUnmarshal: nil receiver"))
	}
	x.UserId = dec.Int64()
	x.FirstName = dec.String()
	x.LastName = dec.String()
	x.Salt = dec.String()
	x.PasswordHashed = dec.String()
}
